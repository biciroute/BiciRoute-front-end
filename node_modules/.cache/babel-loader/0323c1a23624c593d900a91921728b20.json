{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\fduran\\\\Documents\\\\karen\\\\IETI\\\\proyecto\\\\BiciRoute-front-end\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"C:\\\\Users\\\\fduran\\\\Documents\\\\karen\\\\IETI\\\\proyecto\\\\BiciRoute-front-end\\\\src\\\\component\\\\Map\\\\MapComponent.js\";\nimport React from 'react';\nimport { GoogleApiWrapper, Map, Marker, Polyline } from 'google-maps-react';\nimport \"./Map.css\";\nimport Button from '@material-ui/core/Button';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport Modal from '@material-ui/core/Modal';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from 'prop-types';\nimport TextField from '@material-ui/core/TextField';\nimport { flexbox } from '@material-ui/system';\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nconst useStyles = theme => ({\n  paper: {\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  },\n  Modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    margin: 'auto'\n  }\n});\n\nexport class MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      university: {\n        lat: 4.782715,\n        lng: -74.042611\n      },\n      open: false,\n      pathRoute: []\n    }; // Modal\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleOpen = this.handleOpen.bind(this); // Route\n\n    this.autocomplete = this.autocomplete.bind(this);\n    this.setDirectionRoute = this.setDirectionRoute.bind(this); //this.renderDirections =  this.renderDirections.bind(this);\n  }\n\n  setRefInput(ref) {\n    this.autocomplete = ref;\n  }\n\n  handleClose(e) {\n    this.setState({\n      open: false\n    });\n  }\n\n  rand() {\n    return Math.round(Math.random() * 20) - 10;\n  }\n\n  getModalStyle() {\n    const top = 50 + this.rand();\n    const left = 50 + this.rand();\n    return {\n      top: \"\".concat(top, \"%\"),\n      left: \"\".concat(left, \"%\"),\n      transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n    };\n  }\n\n  handleOpen(e) {\n    this.setState({\n      open: true\n    });\n  }\n\n  async setDirectionRoute() {\n    var newPathRoute = await this.calculateRoute();\n    console.log(newPathRoute);\n    this.setState({\n      pathRoute: newPathRoute.overview_path\n    });\n  }\n\n  autocomplete() {\n    const _this$props = this.props,\n          google = _this$props.google,\n          map = _this$props.map,\n          rest = _objectWithoutProperties(_this$props, [\"google\", \"map\"]);\n\n    if (!google || !map) return;\n    var src = document.getElementById(\"source\");\n    var tgt = document.getElementById('target');\n    var autoSrc = new google.maps.places.Autocomplete(src);\n    var autoTgt = new google.maps.places.Autocomplete(tgt);\n    autoSrc.bindTo('bounds', map);\n    autoSrc.setFields(['address_components', 'geometry', 'icon', 'name']);\n    autoTgt.bindTo('bounds', map);\n    autoTgt.setFields(['address_components', 'geometry', 'icon', 'name']);\n  }\n\n  calculateRoute(travelMode, origin, destination, dateUniversity) {\n    const _this$props2 = this.props,\n          google = _this$props2.google,\n          map = _this$props2.map,\n          rest = _objectWithoutProperties(_this$props2, [\"google\", \"map\"]);\n\n    if (!google || !map) return;\n    const directionsService = new google.maps.DirectionsService();\n    let pathRoute;\n    const request = {\n      origin: document.getElementById(\"source\").value,\n      destination: document.getElementById(\"target\").value,\n      travelMode: \"DRIVING\"\n    };\n    return new Promise((resolve, reject) => {\n      directionsService.route(request, (response, status) => {\n        if (status === 'OK') {\n          window.alert(\"OK PASS\");\n          pathRoute = response.routes[0];\n          resolve(pathRoute);\n        } else {\n          window.alert('Directions request failed due to ' + status);\n          reject(status);\n        }\n      });\n    });\n  } //https://stackoverflow.com/questions/26059762/callback-when-dom-is-loaded-in-react-js\n\n\n  componentDidMount() {\n    //this.autocomplete();\n    if (navigator && navigator.geolocation) {//navigator.geolocation.getCurrentPosition(this.setCurrentPosition)\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.map !== prevProps.map) this.autocomplete();\n  } // getModalStyle is not a pure function, we roll the style only on the first render\n\n\n  render() {\n    const classes = this.props.classes;\n    const modalStyle = this.getModalStyle; // const {modalStyle} = React.useState(getModalStyle);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      google: this.props.google,\n      zoom: 15,\n      style: mapStyles,\n      initialCenter: this.state.university,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Marker, {\n      title: 'Escuela colombiana de ingenieria Julio Garavito',\n      position: this.state.university,\n      animation: this.props.google.maps.Animation.DROP,\n      name: 'Escuela colombiana de ingenieria Julio Garavito',\n      description: 'AK 45 #205-59 Bogota\\nInstitucion universitaria',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(Polyline, {\n      path: this.state.pathRoute,\n      geodesic: false,\n      options: {\n        strokeColor: '#38B44F',\n        strokeOpacity: 1,\n        strokeWeight: 7\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(Button, {\n      title: \"Begin your route with biciRoute\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleOpen,\n      id: \"buttonSearch\",\n      \"aria-label\": \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(NavigationIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }), \" Search trip\")), React.createElement(Modal, {\n      open: this.state.open,\n      onClose: this.handleClose,\n      keepMounted: true,\n      id: \"modal\",\n      style: modalStyle //     nameClass = {classes.Modal}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.paper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"source\",\n      type: \"search\",\n      label: \"trip's start\",\n      className: classes.textField,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(TextField, {\n      id: \"target\",\n      type: \"search\",\n      label: \"trip's end\",\n      className: classes.textField,\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226\n      },\n      __self: this\n    }), React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.setDirectionRoute,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227\n      },\n      __self: this\n    }, \"Search possible trips\"))));\n  }\n\n} //https://es.reactjs.org/docs/hooks-reference.html#usestate\n\nMapComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst MapWrapper = props => React.createElement(\"div\", {\n  className: \"unAbsolute\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 248\n  },\n  __self: this\n}, React.createElement(Map, {\n  className: \"map\",\n  google: props.google,\n  visible: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 249\n  },\n  __self: this\n}, React.createElement(MapComponent, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 250\n  },\n  __self: this\n}))));\n\nexport default withStyles(useStyles)(GoogleApiWrapper({\n  apiKey: 'AIzaSyBiVrbSr4j_pen7_BCwmFUJa-xZgbX-D9s',\n  language: \"es\"\n})(MapWrapper));","map":{"version":3,"sources":["C:\\Users\\fduran\\Documents\\karen\\IETI\\proyecto\\BiciRoute-front-end\\src\\component\\Map\\MapComponent.js"],"names":["React","GoogleApiWrapper","Map","Marker","Polyline","Button","NavigationIcon","Modal","withStyles","PropTypes","TextField","flexbox","mapStyles","width","height","useStyles","theme","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","textField","marginLeft","marginRight","display","alignItems","justifyContent","margin","MapComponent","Component","constructor","props","state","university","lat","lng","open","pathRoute","handleClose","bind","handleOpen","autocomplete","setDirectionRoute","setRefInput","ref","e","setState","rand","Math","round","random","getModalStyle","top","left","transform","newPathRoute","calculateRoute","console","log","overview_path","google","map","rest","src","document","getElementById","tgt","autoSrc","maps","places","Autocomplete","autoTgt","bindTo","setFields","travelMode","origin","destination","dateUniversity","directionsService","DirectionsService","request","value","Promise","resolve","reject","route","response","status","window","alert","routes","componentDidMount","navigator","geolocation","componentDidUpdate","prevProps","render","classes","modalStyle","Animation","DROP","strokeColor","strokeOpacity","strokeWeight","propTypes","object","isRequired","MapWrapper","apiKey","language"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { GoogleApiWrapper, Map, Marker, Polyline } from 'google-maps-react';\r\nimport \"./Map.css\"\r\nimport Button from '@material-ui/core/Button';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport Modal from '@material-ui/core/Modal';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from 'prop-types';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { flexbox } from '@material-ui/system';\r\n\r\n\r\n\r\n\r\nconst mapStyles = {\r\n    width: '100%',\r\n    height: '100%',\r\n};\r\n\r\n\r\nconst useStyles = theme => ({\r\n    paper: {\r\n        width: 400,\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    Modal: {\r\n        display:'flex',\r\n        alignItems:'center',\r\n        justifyContent:'center',\r\n        margin:'auto'\r\n\r\n    }\r\n\r\n});\r\n\r\nexport class MapComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            university: { lat: 4.782715, lng: -74.042611 },\r\n            open: false,\r\n            pathRoute: [],\r\n        };\r\n\r\n        // Modal\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        // Route\r\n        this.autocomplete = this.autocomplete.bind(this);\r\n        this.setDirectionRoute = this.setDirectionRoute.bind(this);\r\n        //this.renderDirections =  this.renderDirections.bind(this);\r\n\r\n    }\r\n\r\n    setRefInput(ref) {\r\n        this.autocomplete = ref;\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.setState({\r\n            open: false\r\n        });\r\n    }\r\n\r\n    rand() {\r\n        return Math.round(Math.random() * 20) - 10;\r\n    }\r\n\r\n    getModalStyle() {\r\n        const top = 50 + this.rand();\r\n        const left = 50 + this.rand();\r\n        return {\r\n            top: `${top}%`,\r\n            left: `${left}%`,\r\n            transform: `translate(-${top}%, -${left}%)`,\r\n        };\r\n    }\r\n\r\n    handleOpen(e) {\r\n        this.setState({\r\n            open: true\r\n        })\r\n    }\r\n\r\n    async setDirectionRoute() {\r\n        var newPathRoute = await this.calculateRoute();\r\n\r\n        console.log(newPathRoute);\r\n        this.setState({ pathRoute: newPathRoute.overview_path });\r\n\r\n\r\n    }\r\n\r\n\r\n    autocomplete() {\r\n        const { google, map , ...rest } = this.props;\r\n        if (!google || !map) return;\r\n        var src = document.getElementById(\"source\");\r\n        var tgt = document.getElementById('target');\r\n        var autoSrc = new google.maps.places.Autocomplete(src);\r\n        var autoTgt = new google.maps.places.Autocomplete(tgt);\r\n        autoSrc.bindTo('bounds', map);\r\n        autoSrc.setFields(['address_components', 'geometry', 'icon', 'name']);\r\n        autoTgt.bindTo('bounds', map);\r\n        autoTgt.setFields(['address_components', 'geometry', 'icon', 'name']);\r\n    }\r\n\r\n\r\n    calculateRoute(travelMode, origin, destination, dateUniversity) {\r\n        const { google, map, ...rest } = this.props;\r\n        if (!google || !map) return;\r\n        const directionsService = new google.maps.DirectionsService();\r\n        let pathRoute;\r\n        const request = {\r\n            origin: document.getElementById(\"source\").value,\r\n            destination: document.getElementById(\"target\").value,\r\n            travelMode: \"DRIVING\",\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            directionsService.route(request, (response, status) => {\r\n                if (status === 'OK') {\r\n                    window.alert(\"OK PASS\");\r\n                    pathRoute = response.routes[0];\r\n                    resolve(pathRoute)\r\n                } else {\r\n\r\n                    window.alert('Directions request failed due to ' + status);\r\n                    reject(status)\r\n                }\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    //https://stackoverflow.com/questions/26059762/callback-when-dom-is-loaded-in-react-js\r\n    componentDidMount() {\r\n        //this.autocomplete();\r\n        if (navigator && navigator.geolocation) {\r\n            //navigator.geolocation.getCurrentPosition(this.setCurrentPosition)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.map !== prevProps.map) this.autocomplete();\r\n    }\r\n\r\n\r\n    // getModalStyle is not a pure function, we roll the style only on the first render\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const modalStyle = this.getModalStyle;\r\n        // const {modalStyle} = React.useState(getModalStyle);\r\n        return (\r\n            <div >\r\n                <Map\r\n                    className=\"map\"\r\n                    google={this.props.google}\r\n                    zoom={15}\r\n                    style={mapStyles}\r\n                    initialCenter={this.state.university}>\r\n\r\n                    <Marker\r\n                        title={'Escuela colombiana de ingenieria Julio Garavito'}\r\n                        position={this.state.university}\r\n                        animation={this.props.google.maps.Animation.DROP}\r\n                        name={'Escuela colombiana de ingenieria Julio Garavito'}\r\n                        description={'AK 45 #205-59 Bogota\\nInstitucion universitaria'}\r\n                    />\r\n\r\n\r\n                    <Polyline\r\n                        path={this.state.pathRoute}\r\n                        geodesic={false}\r\n                        options={{\r\n                            strokeColor: '#38B44F',\r\n                            strokeOpacity: 1,\r\n                            strokeWeight: 7,\r\n                        }}\r\n                    />\r\n                    <Button title=\"Begin your route with biciRoute\" variant=\"contained\" color=\"primary\" onClick={this.handleOpen} id=\"buttonSearch\" aria-label=\"delete\" >\r\n                        <NavigationIcon /> Search trip\r\n                    </Button>\r\n\r\n\r\n                </Map>\r\n\r\n\r\n\r\n                <Modal open={this.state.open}\r\n                    onClose={this.handleClose}\r\n                    keepMounted={true}\r\n                    id=\"modal\"\r\n                    style={modalStyle}\r\n               //     nameClass = {classes.Modal}\r\n                >\r\n                    <div className={classes.paper}>\r\n                        <TextField\r\n                            id=\"source\"\r\n                            type=\"search\"\r\n                            label=\"trip's start\"\r\n                            className={classes.textField}\r\n                            margin=\"normal\"\r\n                        />\r\n\r\n                        <TextField\r\n                            id=\"target\"\r\n                            type=\"search\"\r\n                            label=\"trip's end\"\r\n                            className={classes.textField}\r\n                            margin=\"normal\"\r\n                        />\r\n                        <br></br>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.setDirectionRoute}>\r\n                            Search possible trips\r\n                        </Button>\r\n\r\n\r\n\r\n\r\n                    </div>\r\n                </Modal>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n//https://es.reactjs.org/docs/hooks-reference.html#usestate\r\nMapComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst MapWrapper = props => (\r\n    <div className=\"unAbsolute\">\r\n        <Map className=\"map\" google={props.google} visible={false}>\r\n            <MapComponent {...props} />\r\n        </Map>\r\n    </div>\r\n);\r\n\r\nexport default withStyles(useStyles)(GoogleApiWrapper({\r\n    apiKey: 'AIzaSyBiVrbSr4j_pen7_BCwmFUJa-xZgbX-D9s',\r\n    language: \"es\",\r\n})(MapWrapper));"]},"metadata":{},"sourceType":"module"}