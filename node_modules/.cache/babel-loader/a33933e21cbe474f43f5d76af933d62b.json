{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\2143597\\\\Documents\\\\BiciRoute-front-end\\\\src\\\\component\\\\Map\\\\MapComponent.js\";\nimport React from 'react';\nimport { GoogleApiWrapper, Map, Marker, Polyline } from 'google-maps-react';\nimport \"./Map.css\";\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport PropTypes from 'prop-types';\nimport { fade } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport SearchBar from './SearchBar.js';\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n};\n\nconst useStyles = theme => ({\n  paper: {\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(2),\n      width: \"auto\"\n    }\n  },\n  Modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  list: {\n    width: 250\n  },\n  fullList: {\n    width: 'auto'\n  }\n});\n\nexport class MapComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      university: {\n        lat: 4.782715,\n        lng: -74.042611\n      },\n      open: false,\n      pathRoute: [],\n      pathRouteOriginPlace: [],\n      pathRouteDestinationPlace: [],\n      position: null,\n      checked: false,\n      markers: [{\n        university: {\n          lat: 4.782715,\n          lng: -74.042611\n        },\n        title: \"Escuela colombiana de ingenieria Julio Garavito\",\n        name: \"Escuela colombiana de ingenieria Julio Garavito\"\n      }],\n      carres: [\"Calle 100, Troncal Autopista Norte, Cundinamarca, Colombia\", \"Parque Nacional, Calle 36, Bogotá, Colombia\", \"Virrey Solis Castellana, Autopista Norte, Bogotá, Colombia\"]\n    }; // Route\n\n    this.autocomplete = this.autocomplete.bind(this);\n    this.setDirectionRoute = this.setDirectionRoute.bind(this); //this.renderDirections =  this.renderDirections.bind(this);\n\n    this.handleClose = this.handleClose.bind(this);\n    this.handleOpen = this.handleOpen.bind(this);\n    this.handleStatusChange = this.handleStatusChange.bind(this);\n  }\n\n  handleStatusChange(e) {\n    this.setState({\n      status: e.target.value\n    });\n  }\n\n  handleOpen(e) {\n    this.setState({\n      open: true\n    });\n  }\n\n  handleClose(e) {\n    this.setState({\n      open: false\n    });\n  }\n\n  async getLanLnt(address) {\n    const google = this.props.google;\n    const geocoder = new google.maps.Geocoder();\n    return new Promise((resolve, reject) => {\n      geocoder.geocode({\n        'address': address\n      }, function (results, status) {\n        if (status === 'OK') {\n          resolve(results[0].geometry.location);\n        } else {\n          window.alert('Directions ' + address + ' request failed due to ' + status);\n          reject(status);\n        }\n      });\n    });\n  }\n\n  async getCenterMap(sourceRoute, targetRoute) {\n    const _this$props = this.props,\n          google = _this$props.google,\n          map = _this$props.map;\n    const coordinatesDestinations = [];\n    var x = await this.getLanLnt(sourceRoute);\n    var y = await this.getLanLnt(targetRoute);\n    coordinatesDestinations.push(x);\n    coordinatesDestinations.push(y);\n    var bounds = new google.maps.LatLngBounds();\n\n    for (var i = 0; i < coordinatesDestinations.length; i++) {\n      var marker = new google.maps.Marker({\n        position: new google.maps.LatLng(coordinatesDestinations[i].lat(), coordinatesDestinations[i].lng()),\n        map: map\n      });\n      bounds.extend(marker.position);\n    }\n\n    this.setState({\n      position: bounds.getCenter()\n    });\n    map.fitBounds(bounds);\n    return coordinatesDestinations;\n  }\n\n  async setDirectionRoute() {\n    //this.setState({ checked: checked });\n    const origin = document.getElementById(\"source\").value;\n    const destination = document.getElementById(\"target\").value; //Define route the  shortest of the origin to some place \n\n    var theBestOriginToPlace = [1e9, \"undefine\", null];\n    var theBestDestinationToPlace = [1e9, \"undefine\", null];\n\n    for (var i = 0; i < this.state.carres.length; i++) {\n      var place = this.state.carres[i];\n      var newPathRoute = await this.calculateRoute(origin, place);\n      var distance = newPathRoute.routes[0].legs[0].distance.text;\n      distance = parseFloat(distance.split(\" \")[0].replace(\",\", \".\"));\n\n      if (distance < theBestOriginToPlace[0]) {\n        theBestOriginToPlace[1] = place;\n        theBestOriginToPlace[0] = Math.min(distance, theBestOriginToPlace[0]);\n        theBestOriginToPlace[2] = newPathRoute.routes[0].overview_path;\n      }\n    }\n\n    console.log(destination);\n\n    for (i = 0; i < this.state.carres.length; i++) {\n      place = this.state.carres[i]; //if(place === theBestOriginToPlace[1])continue;\n\n      try {\n        newPathRoute = await this.calculateRoute(destination, place);\n        distance = newPathRoute.routes[0].legs[0].distance.text;\n        distance = parseFloat(distance.split(\" \")[0].replace(\",\", \".\"));\n\n        if (distance < theBestDestinationToPlace[0]) {\n          theBestDestinationToPlace[1] = place;\n          theBestDestinationToPlace[0] = Math.min(distance, theBestDestinationToPlace[0]);\n          theBestDestinationToPlace[2] = newPathRoute.routes[0].overview_path;\n        }\n      } catch (error) {}\n    }\n\n    console.log(theBestOriginToPlace[1], theBestDestinationToPlace[1]);\n    newPathRoute = await this.calculateRoute(theBestDestinationToPlace[1], theBestOriginToPlace[1]);\n    this.setState({\n      pathRoute: newPathRoute.routes[0].overview_path,\n      pathRouteDestinationPlace: theBestDestinationToPlace[2],\n      pathRouteOriginPlace: theBestOriginToPlace[2],\n      open: false\n    });\n    var newJSON = JSON.stringify({\n      origin: origin,\n      destination: destination,\n      pathRouteDestinationPlace: theBestDestinationToPlace[1],\n      pathRouteOriginPlace: theBestOriginToPlace[1]\n    });\n\n    if (localStorage.getItem('lastroutes') === undefined || localStorage.getItem('lastroutes') === null) {\n      localStorage.setItem('lastroutes', JSON.stringify([newJSON]));\n    } else {\n      var tdListJSON = [];\n      var tdLists = JSON.parse(localStorage.getItem(\"lastroutes\"));\n\n      for (var i = 0; i < tdLists.length; ++i) {\n        tdListJSON.push(tdLists[i]);\n      }\n\n      tdListJSON.push(newJSON);\n      localStorage.setItem(\"lastroutes\", JSON.stringify(tdListJSON));\n    }\n\n    const places = [origin, destination, theBestDestinationToPlace[1], theBestOriginToPlace[1]];\n    this.setState({\n      markers: []\n    });\n\n    for (i = 0; i < 4; ++i) {\n      const latAndLng = await this.getLanLnt(places[i]);\n      const newMarker = {\n        university: {\n          lat: latAndLng.lat(),\n          lng: latAndLng.lng()\n        },\n        title: places[i],\n        name: places[i]\n      };\n      this.state.markers.push(newMarker);\n    }\n\n    console.log(this.state.markers);\n    this.getCenterMap(origin, destination);\n  }\n\n  autocomplete() {\n    const _this$props2 = this.props,\n          google = _this$props2.google,\n          map = _this$props2.map;\n    if (!google || !map) return;\n    var src = document.getElementById(\"source\");\n    var tgt = document.getElementById('target');\n    var autoSrc = new google.maps.places.Autocomplete(src);\n    var autoTgt = new google.maps.places.Autocomplete(tgt);\n    autoSrc.bindTo('bounds', map);\n    autoSrc.setFields(['address_components', 'geometry', 'icon', 'name']);\n    autoTgt.bindTo('bounds', map);\n    autoTgt.setFields(['address_components', 'geometry', 'icon', 'name']);\n    autoSrc.setComponentRestrictions({\n      'country': ['co']\n    });\n    autoTgt.setComponentRestrictions({\n      'country': ['co']\n    });\n  }\n\n  calculateRoute(origin, destination) {\n    const _this$props3 = this.props,\n          google = _this$props3.google,\n          map = _this$props3.map;\n    if (!google || !map) return;\n    const directionsService = new google.maps.DirectionsService();\n    const request = {\n      origin: origin,\n      destination: destination,\n      travelMode: \"DRIVING\",\n      provideRouteAlternatives: true\n    };\n    return new Promise((resolve, reject) => {\n      directionsService.route(request, (response, status) => {\n        if (status === 'OK') {\n          console.log(response);\n          resolve(response);\n        } else {\n          window.alert(destination + \" ----- \" + origin);\n          window.alert('Directions request failed due to ' + status);\n          reject(status);\n        }\n      });\n    });\n  } //https://stackoverflow.com/questions/26059762/callback-when-dom-is-loaded-in-react-js\n\n\n  componentDidMount() {\n    this.autocomplete();\n\n    if (navigator && navigator.geolocation) {//navigator.geolocation.getCurrentPosition(this.setCurrentPosition)\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.map !== prevProps.map) {\n      this.autocomplete();\n    }\n  }\n\n  render() {\n    const classes = this.props.classes;\n    const mark = this.state.markers.map(td => React.createElement(Marker, {\n      title: td.title,\n      position: td.university,\n      animation: this.props.google.maps.Animation.DROP,\n      name: td.name,\n      description: td.description,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, this.state.checked ? React.createElement(\"div\", {\n      id: \"bar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, React.createElement(SearchBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      id: \"map\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(Map, {\n      className: \"map\",\n      google: this.props.google,\n      zoom: 15,\n      style: mapStyles,\n      initialCenter: this.state.university,\n      centerAroundCurrentLocation: false,\n      mapTypeControl: false,\n      center: this.state.position,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, mark, React.createElement(Polyline, {\n      path: this.state.pathRoute,\n      geodesic: true,\n      options: {\n        strokeColor: '#354BD9',\n        strokeOpacity: 1,\n        strokeWeight: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330\n      },\n      __self: this\n    }), React.createElement(Polyline, {\n      path: this.state.pathRouteDestinationPlace,\n      geodesic: true,\n      options: {\n        strokeColor: '#38B44F',\n        strokeOpacity: 1,\n        strokeWeight: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }), React.createElement(Polyline, {\n      path: this.state.pathRouteOriginPlace,\n      geodesic: true,\n      options: {\n        strokeColor: '#38B44F',\n        strokeOpacity: 1,\n        strokeWeight: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }), React.createElement(Fab, {\n      id: \"fab\",\n      color: \"primary\",\n      \"aria-label\": \"add\",\n      className: classes.fab,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361\n      },\n      __self: this\n    }, React.createElement(NavigationIcon, {\n      onClick: this.setDirectionRoute(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    })))), \");\");\n  }\n\n} //https://es.reactjs.org/docs/hooks-reference.html#usestate\n\nMapComponent.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nconst MapWrapper = props => React.createElement(\"div\", {\n  className: \"unAbsolute\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 382\n  },\n  __self: this\n}, React.createElement(Map, {\n  className: \"map\",\n  google: props.google,\n  visible: false,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 383\n  },\n  __self: this\n}, React.createElement(MapComponent, Object.assign({}, props, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 384\n  },\n  __self: this\n}))));\n\nexport default withStyles(useStyles)(GoogleApiWrapper({\n  apiKey: 'AIzaSyCJuZIQnX6XR1vs6dBHuZHj8J5TrWmVi-8',\n  language: \"es\"\n})(MapWrapper));","map":{"version":3,"sources":["C:\\Users\\2143597\\Documents\\BiciRoute-front-end\\src\\component\\Map\\MapComponent.js"],"names":["React","GoogleApiWrapper","Map","Marker","Polyline","NavigationIcon","withStyles","PropTypes","fade","Fab","SearchBar","mapStyles","width","height","useStyles","theme","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","textField","position","borderRadius","shape","common","white","marginLeft","breakpoints","up","Modal","display","alignItems","justifyContent","list","fullList","MapComponent","Component","constructor","props","state","university","lat","lng","open","pathRoute","pathRouteOriginPlace","pathRouteDestinationPlace","checked","markers","title","name","carres","autocomplete","bind","setDirectionRoute","handleClose","handleOpen","handleStatusChange","e","setState","status","target","value","getLanLnt","address","google","geocoder","maps","Geocoder","Promise","resolve","reject","geocode","results","geometry","location","window","alert","getCenterMap","sourceRoute","targetRoute","map","coordinatesDestinations","x","y","push","bounds","LatLngBounds","i","length","marker","LatLng","extend","getCenter","fitBounds","origin","document","getElementById","destination","theBestOriginToPlace","theBestDestinationToPlace","place","newPathRoute","calculateRoute","distance","routes","legs","text","parseFloat","split","replace","Math","min","overview_path","console","log","error","newJSON","JSON","stringify","localStorage","getItem","undefined","setItem","tdListJSON","tdLists","parse","places","latAndLng","newMarker","src","tgt","autoSrc","Autocomplete","autoTgt","bindTo","setFields","setComponentRestrictions","directionsService","DirectionsService","request","travelMode","provideRouteAlternatives","route","response","componentDidMount","navigator","geolocation","componentDidUpdate","prevProps","render","classes","mark","td","Animation","DROP","description","strokeColor","strokeOpacity","strokeWeight","fab","propTypes","object","isRequired","MapWrapper","apiKey","language"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { GoogleApiWrapper, Map, Marker, Polyline } from 'google-maps-react';\r\nimport \"./Map.css\";\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport PropTypes from 'prop-types';\r\nimport { fade } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport SearchBar from './SearchBar.js';\r\n\r\nconst mapStyles = {\r\n    width: '100%',\r\n    height: '100%',\r\n};\r\n\r\n\r\nconst useStyles = theme => ({\r\n    paper: {\r\n        width: \"100%\",\r\n        backgroundColor: theme.palette.background.paper,\r\n        border: '2px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n    textField: {\r\n        position: \"relative\",\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        \"&:hover\": {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25)\r\n        },\r\n        marginLeft: 0,\r\n        width: \"100%\",\r\n        [theme.breakpoints.up(\"sm\")]: {\r\n            marginLeft: theme.spacing(2),\r\n            width: \"auto\"\r\n        },\r\n\r\n    },\r\n    Modal: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n\r\n    },\r\n  \r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: 'auto',\r\n    },\r\n\r\n});\r\n\r\n\r\nexport class MapComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            university: { lat: 4.782715, lng: -74.042611 },\r\n            open: false,\r\n            pathRoute: [],\r\n            pathRouteOriginPlace: [],\r\n            pathRouteDestinationPlace: [],\r\n            position: null,\r\n            checked: false,\r\n            markers: [\r\n                {\r\n                    university: { lat: 4.782715, lng: -74.042611 },\r\n                    title: \"Escuela colombiana de ingenieria Julio Garavito\",\r\n                    name: \"Escuela colombiana de ingenieria Julio Garavito\",\r\n                },\r\n            ],\r\n            carres: [\r\n                \"Calle 100, Troncal Autopista Norte, Cundinamarca, Colombia\",\r\n                \"Parque Nacional, Calle 36, Bogotá, Colombia\",\r\n                \"Virrey Solis Castellana, Autopista Norte, Bogotá, Colombia\",\r\n            ]\r\n        };\r\n\r\n        // Route\r\n        this.autocomplete = this.autocomplete.bind(this);\r\n        this.setDirectionRoute = this.setDirectionRoute.bind(this);\r\n        //this.renderDirections =  this.renderDirections.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleStatusChange= this.handleStatusChange.bind(this);\r\n    }\r\n    handleStatusChange(e) {\r\n        this.setState({\r\n            status: e.target.value\r\n        });\r\n    }\r\n\r\n    handleOpen(e) {\r\n        this.setState({ open: true });\r\n    }\r\n\r\n    handleClose(e) {\r\n        this.setState({ open: false });\r\n    }\r\n\r\n\r\n\r\n\r\n    async getLanLnt(address) {\r\n        const { google } = this.props;\r\n        const geocoder = new google.maps.Geocoder();\r\n        return new Promise((resolve, reject) => {\r\n            geocoder.geocode({ 'address': address }, function (results, status) {\r\n                if (status === 'OK') {\r\n                    resolve(results[0].geometry.location)\r\n                } else {\r\n                    window.alert('Directions ' + address + ' request failed due to ' + status);\r\n                    reject(status)\r\n                }\r\n            });\r\n        })\r\n    }\r\n\r\n    async getCenterMap(sourceRoute, targetRoute) {\r\n        const { google, map } = this.props;\r\n        const coordinatesDestinations = []\r\n        var x = await this.getLanLnt(sourceRoute)\r\n        var y = await this.getLanLnt(targetRoute)\r\n        coordinatesDestinations.push(x);\r\n        coordinatesDestinations.push(y);\r\n        var bounds = new google.maps.LatLngBounds();\r\n        for (var i = 0; i < coordinatesDestinations.length; i++) {\r\n            var marker = new google.maps.Marker({\r\n                position: new google.maps.LatLng(coordinatesDestinations[i].lat(), coordinatesDestinations[i].lng()),\r\n                map: map\r\n            });\r\n            bounds.extend(marker.position);\r\n        }\r\n        this.setState({\r\n            position: bounds.getCenter()\r\n        });\r\n        map.fitBounds(bounds);\r\n        return coordinatesDestinations\r\n    }\r\n\r\n\r\n    async setDirectionRoute() {\r\n        //this.setState({ checked: checked });\r\n        const origin = document.getElementById(\"source\").value;\r\n        const destination = document.getElementById(\"target\").value;\r\n        //Define route the  shortest of the origin to some place \r\n        var theBestOriginToPlace = [1e9, \"undefine\", null];\r\n        var theBestDestinationToPlace = [1e9, \"undefine\", null];\r\n\r\n        for (var i = 0; i < this.state.carres.length; i++) {\r\n            var place = this.state.carres[i];\r\n            var newPathRoute = await this.calculateRoute(origin, place);\r\n            var distance = newPathRoute.routes[0].legs[0].distance.text;\r\n            distance = parseFloat(distance.split(\" \")[0].replace(\",\", \".\"));\r\n            if (distance < theBestOriginToPlace[0]) {\r\n                theBestOriginToPlace[1] = place;\r\n                theBestOriginToPlace[0] = Math.min(distance, theBestOriginToPlace[0])\r\n                theBestOriginToPlace[2] = newPathRoute.routes[0].overview_path;\r\n            }\r\n        }\r\n        console.log(destination)\r\n        for (i = 0; i < this.state.carres.length; i++) {\r\n            place = this.state.carres[i];\r\n            //if(place === theBestOriginToPlace[1])continue;\r\n            try {\r\n                newPathRoute = await this.calculateRoute(destination, place);\r\n                distance = newPathRoute.routes[0].legs[0].distance.text;\r\n                distance = parseFloat(distance.split(\" \")[0].replace(\",\", \".\"));\r\n                if (distance < theBestDestinationToPlace[0]) {\r\n                    theBestDestinationToPlace[1] = place;\r\n                    theBestDestinationToPlace[0] = Math.min(distance, theBestDestinationToPlace[0])\r\n                    theBestDestinationToPlace[2] = newPathRoute.routes[0].overview_path;\r\n                }\r\n\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n        }\r\n        console.log(theBestOriginToPlace[1], theBestDestinationToPlace[1])\r\n        newPathRoute = await this.calculateRoute(theBestDestinationToPlace[1], theBestOriginToPlace[1]);\r\n        this.setState({\r\n            pathRoute: newPathRoute.routes[0].overview_path,\r\n            pathRouteDestinationPlace: theBestDestinationToPlace[2],\r\n            pathRouteOriginPlace: theBestOriginToPlace[2],\r\n            open: false\r\n        });\r\n\r\n        var newJSON = JSON.stringify( {\r\n            origin : origin,\r\n            destination :  destination,\r\n            pathRouteDestinationPlace : theBestDestinationToPlace[1],\r\n            pathRouteOriginPlace : theBestOriginToPlace[1]\r\n        });\r\n\r\n        if (localStorage.getItem('lastroutes') === undefined || localStorage.getItem('lastroutes') === null ) {\r\n            localStorage.setItem('lastroutes', JSON.stringify([newJSON]))\r\n        }else{\r\n            var tdListJSON = []\r\n            var tdLists = JSON.parse(localStorage.getItem(\"lastroutes\"));\r\n            for(var i = 0 ; i < tdLists.length  ; ++i ){\r\n                tdListJSON.push(tdLists[i]);\r\n            } \r\n            tdListJSON.push(newJSON);\r\n            localStorage.setItem(\"lastroutes\",JSON.stringify(tdListJSON));\r\n        }\r\n\r\n\r\n        const places = [origin, destination, theBestDestinationToPlace[1], theBestOriginToPlace[1]]\r\n        this.setState({\r\n            markers: []\r\n        })\r\n        for (i = 0; i < 4; ++i) {\r\n            const latAndLng = await this.getLanLnt(places[i]);\r\n            const newMarker = {\r\n                university: { lat: latAndLng.lat(), lng: latAndLng.lng() },\r\n                title: places[i],\r\n                name: places[i],\r\n            }\r\n            this.state.markers.push(newMarker);\r\n        }\r\n        console.log(this.state.markers)\r\n\r\n        this.getCenterMap(origin, destination);\r\n\r\n    }\r\n\r\n\r\n    autocomplete() {\r\n        const { google, map } = this.props;\r\n        if (!google || !map) return;\r\n        var src = document.getElementById(\"source\");\r\n        var tgt = document.getElementById('target');\r\n        var autoSrc = new google.maps.places.Autocomplete(src);\r\n        var autoTgt = new google.maps.places.Autocomplete(tgt);\r\n        autoSrc.bindTo('bounds', map);\r\n        autoSrc.setFields(['address_components', 'geometry', 'icon', 'name']);\r\n        autoTgt.bindTo('bounds', map);\r\n        autoTgt.setFields(['address_components', 'geometry', 'icon', 'name']);\r\n\r\n        autoSrc.setComponentRestrictions(\r\n            { 'country': ['co'] });\r\n        autoTgt.setComponentRestrictions(\r\n            { 'country': ['co'] });\r\n\r\n\r\n    }\r\n\r\n\r\n    calculateRoute(origin, destination) {\r\n        const { google, map } = this.props;\r\n        if (!google || !map) return;\r\n        const directionsService = new google.maps.DirectionsService();\r\n        const request = {\r\n            origin: origin,\r\n            destination: destination,\r\n            travelMode: \"DRIVING\",\r\n            provideRouteAlternatives: true,\r\n        };\r\n        return new Promise((resolve, reject) => {\r\n            directionsService.route(request, (response, status) => {\r\n                if (status === 'OK') {\r\n                    console.log(response)\r\n                    resolve(response)\r\n                } else {\r\n                    window.alert(destination + \" ----- \" + origin)\r\n                    window.alert('Directions request failed due to ' + status);\r\n                    reject(status)\r\n                }\r\n            })\r\n        }\r\n        )\r\n    }\r\n\r\n\r\n    //https://stackoverflow.com/questions/26059762/callback-when-dom-is-loaded-in-react-js\r\n    componentDidMount() {\r\n        this.autocomplete();\r\n        if (navigator && navigator.geolocation) {\r\n            //navigator.geolocation.getCurrentPosition(this.setCurrentPosition)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.map !== prevProps.map) {\r\n            this.autocomplete();\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n        const mark = this.state.markers.map((td) =>\r\n            <Marker\r\n                title={td.title}\r\n                position={td.university}\r\n                animation={this.props.google.maps.Animation.DROP}\r\n                name={td.name}\r\n                description={td.description}\r\n            />\r\n        );\r\n\r\n        return (\r\n        <div>   \r\n            {this.state.checked ? (\r\n            <div id=\"bar\">\r\n                    <SearchBar></SearchBar>   \r\n            </div>\r\n            \r\n        ) : (\r\n            <div id=\"map\">    \r\n                    <Map\r\n                className=\"map\"\r\n                google={this.props.google}\r\n                zoom={15}\r\n                style={mapStyles}\r\n                initialCenter={this.state.university}\r\n                centerAroundCurrentLocation={false}\r\n                mapTypeControl={false}\r\n                center={this.state.position}\r\n\r\n                >\r\n                \r\n                {mark}\r\n\r\n                <Polyline\r\n                    path={this.state.pathRoute}\r\n                    geodesic={true}\r\n                    options={{\r\n                        strokeColor: '#354BD9',\r\n                        strokeOpacity: 1,\r\n                        strokeWeight: 2,\r\n\r\n                    }}\r\n                />\r\n\r\n                <Polyline\r\n                    path={this.state.pathRouteDestinationPlace}\r\n                    geodesic={true}\r\n                    options={{\r\n                        strokeColor: '#38B44F',\r\n                        strokeOpacity: 1,\r\n                        strokeWeight: 2,\r\n                    }}\r\n                />\r\n\r\n                <Polyline\r\n                    path={this.state.pathRouteOriginPlace}\r\n                    geodesic={true}\r\n                    options={{\r\n                        strokeColor: '#38B44F',\r\n                        strokeOpacity: 1,\r\n                        strokeWeight: 2,\r\n                    }}\r\n                />\r\n\r\n                <Fab id=\"fab\" color=\"primary\" aria-label=\"add\" className={classes.fab} >\r\n                    <NavigationIcon onClick={this.setDirectionRoute()}/>\r\n                </Fab>\r\n                \r\n            </Map>\r\n            </div>\r\n            )}\r\n\r\n        );\r\n        </div>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n//https://es.reactjs.org/docs/hooks-reference.html#usestate\r\nMapComponent.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst MapWrapper = props => (\r\n    <div className=\"unAbsolute\">\r\n        <Map className=\"map\" google={props.google} visible={false}>\r\n            <MapComponent {...props} />\r\n        </Map>\r\n    </div>\r\n);\r\n\r\nexport default withStyles(useStyles)(GoogleApiWrapper({\r\n    apiKey: 'AIzaSyCJuZIQnX6XR1vs6dBHuZHj8J5TrWmVi-8',\r\n    language: \"es\",\r\n})(MapWrapper));"]},"metadata":{},"sourceType":"module"}