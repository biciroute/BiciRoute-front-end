{"ast":null,"code":"var _jsxFileName = \"C:\\\\University\\\\University\\\\IETI\\\\BiciRoute\\\\BiciRoute-front-end\\\\src\\\\component\\\\SignUp\\\\SignUp.js\";\nimport React from 'react';\nimport { MDBBtn, MDBCol, MDBRow, MDBCard, MDBCardTitle } from \"mdbreact\";\nimport \"./SignUp.css\";\nimport swal from 'sweetalert';\nimport { Link } from 'react-router-dom';\nexport class SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      \"firstName\": \"\",\n      \"lastName\": \"\",\n      \"email\": \"\",\n      \"password\": \"\",\n      \"checked\": false\n    };\n    this.submitHandler = this.submitHandler.bind(this);\n    this.changeHandler = this.changeHandler.bind(this);\n    this.changeCheckTermsHandler = this.changeCheckTermsHandler.bind(this);\n    this.validForm = this.validForm.bind(this);\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, React.createElement(\"main\", {\n      className: \"layoutSignUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      className: \"rowBackground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      sm: \"4\",\n      md: \"7\",\n      className: \"d-none d-md-block\",\n      id: \"viewBackground\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \" \"), React.createElement(MDBCol, {\n      xs: \"12\",\n      sm: \"8\",\n      md: \"5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(MDBCard, {\n      className: \"card-body\",\n      id: \"cardForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: process.env.PUBLIC_URL + \"/images/logo.jpg\",\n      className: \"avatar\",\n      alt: \"Cinque Terre\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }), React.createElement(MDBCardTitle, {\n      className: \"sign-post-biciroute\",\n      style: {\n        alignSelf: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"BiciRoute\"), React.createElement(\"form\", {\n      className: \"needs-validation\",\n      onSubmit: this.submitHandler,\n      noValidate: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"6\",\n      className: \"mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"firstNameInput\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"First name\"), React.createElement(\"input\", {\n      value: this.state.firstName,\n      name: \"firstName\",\n      onChange: this.changeHandler,\n      type: \"text\",\n      id: \"firstNameInput\",\n      className: \"form-control\",\n      placeholder: \"First name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"valid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Looks good!\"), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"You must enter a valid first name.\")), React.createElement(MDBCol, {\n      md: \"6\",\n      className: \"mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"lastNameInput\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Last name\"), React.createElement(\"input\", {\n      value: this.state.lastName,\n      name: \"lastName\",\n      onChange: this.changeHandler,\n      type: \"text\",\n      id: \"lastNameInput\",\n      className: \"form-control\",\n      placeholder: \"Last name\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"valid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Looks good!\"), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"You must enter a valid last name.\"))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"12\",\n      className: \"mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"emailInput\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Email\"), React.createElement(\"input\", {\n      value: this.state.email,\n      onChange: this.changeHandler,\n      type: \"email\",\n      id: \"emailInput\",\n      className: \"form-control\",\n      name: \"email\",\n      placeholder: \"Your Email address\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"valid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Looks good!\"), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"You must enter a valid email.\"))), React.createElement(MDBRow, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(MDBCol, {\n      md: \"12\",\n      className: \"mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"passwordInput\",\n      className: \"grey-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      value: this.state.password,\n      onChange: this.changeHandler,\n      type: \"password\",\n      id: \"passwordInput\",\n      className: \"form-control\",\n      name: \"password\",\n      placeholder: \"Your Password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"valid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Looks good!\"), React.createElement(\"div\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Password must contain at least one number, one lowercase letter, one uppercase letter, and a minimum length of 6 characters.\"))), React.createElement(MDBCol, {\n      md: \"12\",\n      className: \"mb-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"custom-control custom-checkbox pl-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.checked,\n      onChange: this.changeCheckTermsHandler,\n      type: \"checkbox\",\n      id: \"invalidCheck\",\n      className: \"custom-control-input\",\n      name: \"checked\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"custom-control-label\",\n      htmlFor: \"invalidCheck\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Agree to terms and conditions\"))), React.createElement(MDBBtn, {\n      color: \"elegant\",\n      type: \"submit\",\n      id: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(Link, {\n      to: \"/login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Do you already have an account? Login\"))))))));\n  }\n\n  submitHandler(event) {\n    event.preventDefault();\n\n    if (this.validForm()) {\n      if (localStorage.getItem(\"email=\" + this.state.email) !== null) {\n        swal({\n          title: \"Ooops!\",\n          text: \"This email does already exist!. Please sign up with other email.!\",\n          icon: \"error\",\n          timer: 2000,\n          button: false\n        });\n      } else {\n        localStorage.setItem(\"name\", this.state.firstName);\n        localStorage.setItem(\"lastName\", this.state.lastName);\n        localStorage.setItem(\"marca\", \"Fox\");\n        localStorage.setItem(\"color\", \"White\");\n        var info = {\n          password: this.state.password,\n          firstName: this.state.firstName,\n          lastName: this.state.lastName,\n          bici: {\n            brand: \"Fox\",\n            color: \"White\"\n          }\n        };\n        localStorage.setItem(\"email=\" + this.state.email, JSON.stringify(info));\n        swal({\n          title: \"Good job!\",\n          text: \"You have signed up sucessfully!\",\n          icon: \"success\",\n          timer: 2000,\n          button: false\n        }).then(() => {\n          window.location.href = \"/home\";\n        });\n      }\n    }\n  }\n\n  changeCheckTermsHandler(event) {\n    this.setState({\n      checked: event.target.checked\n    });\n  }\n\n  changeHandler(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  validForm() {\n    if (this.validInternationalNames(this.state.firstName) && this.validInternationalNames(this.state.lastName) && this.validEmail(this.state.email) && this.validPasswordFormat(this.state.password) && this.state.checked) {\n      return true;\n    }\n\n    if (this.validInternationalNames(this.state.firstName)) document.getElementById(\"firstNameInput\").className = \"form-control is-valid\";else {\n      document.getElementById(\"firstNameInput\").className = \"form-control is-invalid\";\n    }\n    if (this.validInternationalNames(this.state.lastName)) document.getElementById(\"lastNameInput\").className = \"form-control is-valid\";else {\n      document.getElementById(\"lastNameInput\").className = \"form-control is-invalid\";\n    }\n    if (this.validEmail(this.state.email)) document.getElementById(\"emailInput\").className = \"form-control is-valid\";else {\n      document.getElementById(\"emailInput\").className = \"form-control is-invalid\";\n    }\n    if (this.validPasswordFormat(this.state.password)) document.getElementById(\"passwordInput\").className = \"form-control is-valid\";else {\n      document.getElementById(\"passwordInput\").className = \"form-control is-invalid\";\n    }\n    if (this.state.checked) document.getElementById(\"invalidCheck\").className = \"custom-control-input is-valid\";else {\n      document.getElementById(\"invalidCheck\").className = \"custom-control-input is-invalid\";\n    }\n    return false;\n  }\n  /*\r\n    The password must contain at least one number,\r\n    one lowercase letter, one uppercase letter,\r\n    and a minimum length of 6 characters.\r\n  */\n\n\n  validPasswordFormat(password) {\n    var re = /^((?=[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\u{10FFFF}]*[A-Z])(?=[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\u{10FFFF}]*[a-z])(?=[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\u{10FFFF}]*[0-9]))(?=[\\0-\\t\\x0B\\f\\x0E-\\u2027\\u202A-\\u{10FFFF}]{6,})/u;\n    return re.test(password);\n  }\n\n  validInternationalNames(name) {\n    var re = /^[ ',-\\.A-Za-z\\xC0-\\xCF\\xD1-\\xD6\\xD8-\\xDD\\xDF-\\xE5\\xE7-\\xF6\\xF8-\\xFD\\xFF\\u0104-\\u0107\\u010C\\u010D\\u0116-\\u0119\\u012E\\u012F\\u0141-\\u0144\\u0152\\u0160\\u0161\\u016A\\u016B\\u0172\\u0173\\u0178-\\u017E\\u2202]+$/u;\n    return re.test(name);\n  }\n\n  validEmail(email) {\n    var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n}","map":{"version":3,"sources":["C:\\University\\University\\IETI\\BiciRoute\\BiciRoute-front-end\\src\\component\\SignUp\\SignUp.js"],"names":["React","MDBBtn","MDBCol","MDBRow","MDBCard","MDBCardTitle","swal","Link","SignUp","Component","constructor","props","state","submitHandler","bind","changeHandler","changeCheckTermsHandler","validForm","render","process","env","PUBLIC_URL","alignSelf","firstName","lastName","email","password","checked","event","preventDefault","localStorage","getItem","title","text","icon","timer","button","setItem","info","bici","brand","color","JSON","stringify","then","window","location","href","setState","target","name","value","validInternationalNames","validEmail","validPasswordFormat","document","getElementById","className","re","test","String","toLowerCase"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { MDBBtn, MDBCol, MDBRow, MDBCard, MDBCardTitle} from \"mdbreact\";\r\nimport \"./SignUp.css\";\r\nimport swal from 'sweetalert';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport class SignUp extends React.Component{\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\"firstName\":\"\", \"lastName\":\"\", \"email\":\"\", \"password\":\"\",\r\n        \"checked\": false};\r\n      this.submitHandler = this.submitHandler.bind(this);\r\n      this.changeHandler = this.changeHandler.bind(this);\r\n      this.changeCheckTermsHandler = this.changeCheckTermsHandler.bind(this);\r\n      this.validForm = this.validForm.bind(this);\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n          <React.Fragment>\r\n            <main className=\"layoutSignUp\">\r\n              <div className=\"container-fluid\">\r\n                <MDBRow className=\"rowBackground\">\r\n                  <MDBCol sm=\"4\" md=\"7\" className=\"d-none d-md-block\" id=\"viewBackground\" > {/* it's not shown in screen xs*/}\r\n                  </MDBCol>\r\n                  <MDBCol xs=\"12\" sm=\"8\" md=\"5\">\r\n                      <MDBCard className=\"card-body\" id=\"cardForm\">\r\n                          <img src={process.env.PUBLIC_URL+ \"/images/logo.jpg\"}\r\n                            className=\"avatar\" alt=\"Cinque Terre\"\r\n                          />\r\n                        <MDBCardTitle className=\"sign-post-biciroute\" style={{ alignSelf: \"center\"}}>\r\n                          BiciRoute\r\n                        </MDBCardTitle>\r\n                        \r\n                        <form className=\"needs-validation\" onSubmit={this.submitHandler} noValidate>\r\n                          <MDBRow>\r\n                            <MDBCol md=\"6\" className=\"mb-1\">\r\n                              <label htmlFor=\"firstNameInput\" className=\"grey-text\">\r\n                                First name\r\n                              </label>\r\n                              <input value={this.state.firstName} name=\"firstName\" onChange={this.changeHandler}\r\n                                type=\"text\" id=\"firstNameInput\" className=\"form-control\" \r\n                                placeholder=\"First name\" required\r\n                              />\r\n                              <div className=\"valid-feedback\">Looks good!</div>\r\n                              <div className=\"invalid-feedback\">You must enter a valid first name.</div>\r\n                            </MDBCol>\r\n                            <MDBCol md=\"6\" className=\"mb-1\">\r\n                              <label htmlFor=\"lastNameInput\" className=\"grey-text\">\r\n                                Last name\r\n                              </label>\r\n                              <input value={this.state.lastName} name=\"lastName\" onChange={this.changeHandler}\r\n                                type=\"text\" id=\"lastNameInput\" className=\"form-control\"\r\n                                placeholder=\"Last name\" required\r\n                              />\r\n                              <div className=\"valid-feedback\">Looks good!</div>\r\n                              <div className=\"invalid-feedback\">You must enter a valid last name.</div>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n                          <MDBRow>\r\n                            <MDBCol md=\"12\" className=\"mb-1\">\r\n                              <label htmlFor=\"emailInput\" className=\"grey-text\">\r\n                                Email\r\n                              </label>\r\n                              <input value={this.state.email} onChange={this.changeHandler} type=\"email\"\r\n                                id=\"emailInput\" className=\"form-control\"\r\n                                name=\"email\" placeholder=\"Your Email address\" required\r\n                              />\r\n                              <div className=\"valid-feedback\">Looks good!</div>\r\n                              <div className=\"invalid-feedback\">You must enter a valid email.</div>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n\r\n                          <MDBRow>\r\n                            <MDBCol md=\"12\" className=\"mb-1\">\r\n                              <label htmlFor=\"passwordInput\" className=\"grey-text\" >\r\n                                Password\r\n                              </label>\r\n                              <input value={this.state.password} onChange={this.changeHandler} type=\"password\"\r\n                                id=\"passwordInput\" className=\"form-control\" name=\"password\"\r\n                                placeholder=\"Your Password\" required\r\n                              />\r\n                              <div className=\"valid-feedback\">Looks good!</div>\r\n                              <div className=\"invalid-feedback\">\r\n                                Password must contain at least one number, one lowercase letter, one uppercase letter,\r\n                                and a minimum length of 6 characters.\r\n                              </div>\r\n                            </MDBCol>\r\n                          </MDBRow>\r\n\r\n                          <MDBCol md=\"12\" className=\"mb-1\">\r\n                            <div className=\"custom-control custom-checkbox pl-3\">\r\n                              <input value={this.state.checked} onChange={this.changeCheckTermsHandler} type=\"checkbox\"\r\n                                id=\"invalidCheck\" className=\"custom-control-input\"\r\n                                name=\"checked\" required\r\n                              />\r\n                              <label className=\"custom-control-label\" htmlFor=\"invalidCheck\">\r\n                                Agree to terms and conditions\r\n                              </label>\r\n                              \r\n                            </div>\r\n                          </MDBCol>\r\n                          <MDBBtn color=\"elegant\" type=\"submit\" id=\"submit\">\r\n                            Sign Up\r\n                          </MDBBtn>\r\n                          <Link to=\"/login\">Do you already have an account? Login</Link>\r\n                        </form>\r\n\r\n                      </MDBCard>\r\n                  </MDBCol>\r\n                </MDBRow>\r\n              </div>\r\n            </main>\r\n          </React.Fragment>\r\n        );  \r\n    }\r\n\r\n    submitHandler(event){\r\n      event.preventDefault();\r\n\r\n      if(this.validForm()){\r\n        if(localStorage.getItem(\"email=\"+this.state.email)!==null){\r\n            swal({\r\n              title:\"Ooops!\",\r\n              text: \"This email does already exist!. Please sign up with other email.!\",\r\n              icon: \"error\",\r\n              timer: 2000,\r\n              button: false,\r\n            });\r\n        }else{\r\n            localStorage.setItem(\"name\", this.state.firstName);\r\n            localStorage.setItem(\"lastName\", this.state.lastName);\r\n            localStorage.setItem(\"marca\",\"Fox\");\r\n            localStorage.setItem(\"color\",\"White\");\r\n            var info = {\r\n              password: this.state.password,\r\n              firstName: this.state.firstName,\r\n              lastName: this.state.lastName,\r\n              bici: {\r\n                brand: \"Fox\",\r\n                color: \"White\"\r\n              }\r\n            }\r\n            localStorage.setItem(\"email=\"+this.state.email,JSON.stringify(info));\r\n\r\n            swal({\r\n              title:\"Good job!\",\r\n              text: \"You have signed up sucessfully!\",\r\n              icon: \"success\",\r\n              timer: 2000,\r\n              button: false,\r\n            }).then(() => {\r\n              window.location.href = \"/home\";\r\n            });\r\n        }\r\n      }\r\n    };\r\n\r\n    changeCheckTermsHandler(event){\r\n      this.setState({ checked: event.target.checked });\r\n    }\r\n\r\n    changeHandler(event){\r\n      this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    validForm(){\r\n      if(this.validInternationalNames(this.state.firstName) && this.validInternationalNames(this.state.lastName) &&\r\n         this.validEmail(this.state.email) && this.validPasswordFormat(this.state.password) && this.state.checked){\r\n          return true;\r\n      }\r\n      \r\n      if(this.validInternationalNames(this.state.firstName)) document.getElementById(\"firstNameInput\").className = \"form-control is-valid\";\r\n      else{\r\n        document.getElementById(\"firstNameInput\").className = \"form-control is-invalid\";\r\n      }\r\n\r\n      if(this.validInternationalNames(this.state.lastName)) document.getElementById(\"lastNameInput\").className = \"form-control is-valid\";\r\n      else {\r\n        document.getElementById(\"lastNameInput\").className = \"form-control is-invalid\";\r\n      }\r\n\r\n      if(this.validEmail(this.state.email)) document.getElementById(\"emailInput\").className = \"form-control is-valid\";\r\n      else{\r\n        document.getElementById(\"emailInput\").className =\"form-control is-invalid\";\r\n      }\r\n      \r\n      if(this.validPasswordFormat(this.state.password)) document.getElementById(\"passwordInput\").className = \"form-control is-valid\";\r\n      else{\r\n        document.getElementById(\"passwordInput\").className = \"form-control is-invalid\";\r\n      }\r\n      \r\n      if(this.state.checked) document.getElementById(\"invalidCheck\").className = \"custom-control-input is-valid\";\r\n      else{\r\n        document.getElementById(\"invalidCheck\").className = \"custom-control-input is-invalid\";\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /*\r\n      The password must contain at least one number,\r\n      one lowercase letter, one uppercase letter,\r\n      and a minimum length of 6 characters.\r\n    */\r\n    validPasswordFormat(password){\r\n      var re = /^((?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]))(?=.{6,})/u;\r\n      return re.test(password);\r\n    }\r\n\r\n    validInternationalNames(name){\r\n      var re = /^[a-zA-ZàáâäãåąčćęèéêëėįìíîïłńòóôöõøùúûüųūÿýżźñçčšžÀÁÂÄÃÅĄĆČĖĘÈÉÊËÌÍÎÏĮŁŃÒÓÔÖÕØÙÚÛÜŲŪŸÝŻŹÑßÇŒÆČŠŽ∂ð ,.'-]+$/u;\r\n      return re.test(name);\r\n    }\r\n\r\n    validEmail(email){\r\n      var re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n      return re.test(String(email).toLowerCase());\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}