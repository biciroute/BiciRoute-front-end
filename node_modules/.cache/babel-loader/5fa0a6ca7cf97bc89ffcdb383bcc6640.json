{"ast":null,"code":"/**\r\n * Copyright (c) Nicolas Gallagher.\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\nimport Dimensions from '../Dimensions';\n/**\r\n * PixelRatio gives access to the device pixel density.\r\n */\n\nvar PixelRatio =\n/*#__PURE__*/\nfunction () {\n  function PixelRatio() {}\n  /**\r\n   * Returns the device pixel density.\r\n   */\n\n\n  PixelRatio.get = function get() {\n    return Dimensions.get('window').scale;\n  }\n  /**\r\n   * No equivalent for Web\r\n   */\n  ;\n\n  PixelRatio.getFontScale = function getFontScale() {\n    return Dimensions.get('window').fontScale || PixelRatio.get();\n  }\n  /**\r\n   * Converts a layout size (dp) to pixel size (px).\r\n   * Guaranteed to return an integer number.\r\n   */\n  ;\n\n  PixelRatio.getPixelSizeForLayoutSize = function getPixelSizeForLayoutSize(layoutSize) {\n    return Math.round(layoutSize * PixelRatio.get());\n  }\n  /**\r\n   * Rounds a layout size (dp) to the nearest layout size that corresponds to\r\n   * an integer number of pixels. For example, on a device with a PixelRatio\r\n   * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\r\n   * exactly (8.33 * 3) = 25 pixels.\r\n   */\n  ;\n\n  PixelRatio.roundToNearestPixel = function roundToNearestPixel(layoutSize) {\n    var ratio = PixelRatio.get();\n    return Math.round(layoutSize * ratio) / ratio;\n  };\n\n  return PixelRatio;\n}();\n\nexport { PixelRatio as default };","map":null,"metadata":{},"sourceType":"module"}